     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, fopen, fprintf, fscanf, fclose, scanf, printf
     6                                  import exit msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import fprintf msvcrt.dll
     9                                  import fscanf msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import scanf msvcrt.dll
    12                                  import printf msvcrt.dll
    13                                  
    14                                  segment data use32 class=data
    15 00000000 FFFFFFFF                    descr dd -1
    16 00000004 00000000                    n dd 0
    17 00000008 7200                        read_mode db 'r', 0
    18 0000000A 696E7075742E747874-         file_name db 'input.txt', 0
    18 00000013 00                 
    19 00000014 256400                      n_format db "%d", 0
    20 00000017 257800                      elem_format db "%x", 0
    21 0000001A 25642000                    afisare_format db "%d ", 0
    22 0000001E 00000000                    curent dd 0
    23 00000022 00000000                    copie_ecx dd 0
    24 00000026 14000000                    minim_curent dd 20
    25                                      
    26                                  
    27                                  segment code use32 class=code
    28                                      start:
    29                                      
    30                                      .deschidere_fisier:
    31 00000000 68[08000000]                    push dword read_mode
    32 00000005 68[0A000000]                    push dword file_name
    33 0000000A FF15[00000000]                  call [fopen]
    34 00000010 83C408                          add esp, 4 * 2
    35                                          
    36 00000013 A3[00000000]                    mov [descr], eax
    37 00000018 83F800                          cmp eax, 0
    38 0000001B 0F849F000000                    je .final
    39                                      
    40                                      .citire_n:
    41 00000021 68[04000000]                    push dword n
    42 00000026 68[14000000]                    push dword n_format
    43 0000002B FF35[00000000]                  push dword [descr]
    44 00000031 FF15[00000000]                  call [fscanf] 
    45 00000037 83C40C                          add esp, 4 * 3
    46                                      
    47                                      .pregatire_citire_sir:
    48 0000003A 8B0D[04000000]                  mov ecx, [n]
    49 00000040 E37E                            jecxz .final
    50 00000042 FC                              cld
    51                                      
    52                                      .citire_sir:
    53 00000043 890D[22000000]                  mov dword[copie_ecx], ecx
    54 00000049 68[1E000000]                    push dword curent
    55 0000004E 68[17000000]                    push dword elem_format
    56 00000053 FF35[00000000]                  push dword [descr]
    57 00000059 FF15[00000000]                  call [fscanf]
    58 0000005F 83C408                          add esp, 4 * 2
    59 00000062 B901000000                      mov ecx, 1
    60 00000067 B811000000                      mov eax, 0x11
    61 0000006C A3[26000000]                    mov dword[minim_curent], eax
    62 00000071 A1[1E000000]                    mov eax, [curent]
    63                                          
    64                                      .cauta_cifra_minim:
    65 00000076 BA00000000                      mov edx, 0
    66 0000007B BB10000000                      mov ebx, 0x10
    67 00000080 F7F3                            div ebx
    68 00000082 3B15[26000000]                  cmp edx, dword[minim_curent]
    69 00000088 730B                            jae .repeta_cifra
    70                                          
    71 0000008A 8915[26000000]                  mov dword[minim_curent], edx
    72 00000090 83F800                          cmp eax, 0
    73 00000093 7403                            je .afisare_cifra
    74                                          
    75                                      .repeta_cifra:
    76 00000095 41                              inc ecx
    77 00000096 E2DE                            loop .cauta_cifra_minim
    78                                      
    79                                      .afisare_cifra:
    80 00000098 FF35[26000000]                  push dword [minim_curent]
    81 0000009E 68[1A000000]                    push dword afisare_format
    82 000000A3 FF15[00000000]                  call [printf]
    83                                      
    84                                      .repeta_citire:
    85 000000A9 8B0D[22000000]                  mov ecx, dword[copie_ecx]
    86 000000AF E292                            loop .citire_sir    
    87                                          
    88                                      .inchidere_fisier:
    89 000000B1 FF35[00000000]                  push dword [descr]
    90 000000B7 FF15[00000000]                  call [fclose]
    91 000000BD 83C404                          add esp, 4
    92                                          
    93                                      .final:
    94 000000C0 6A00                            push dword 0
    95 000000C2 FF15[00000000]                  call [exit]
