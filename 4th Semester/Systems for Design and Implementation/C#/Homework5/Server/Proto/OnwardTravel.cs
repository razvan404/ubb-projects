// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OnwardTravel.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OnwardTravel.Server {

  /// <summary>Holder for reflection information generated from OnwardTravel.proto</summary>
  public static partial class OnwardTravelReflection {

    #region Descriptor
    /// <summary>File descriptor for OnwardTravel.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OnwardTravelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJPbndhcmRUcmF2ZWwucHJvdG8ibQoLVXNlck1lc3NhZ2USDwoCaWQYASAB",
            "KAlIAIgBARIVCgh1c2VybmFtZRgCIAEoCUgBiAEBEhUKCHBhc3N3b3JkGAMg",
            "ASgJSAKIAQFCBQoDX2lkQgsKCV91c2VybmFtZUILCglfcGFzc3dvcmQioQEK",
            "D0RhdGVUaW1lTWVzc2FnZRIRCgR5ZWFyGAEgASgFSACIAQESEgoFbW9udGgY",
            "AiABKAVIAYgBARIQCgNkYXkYAyABKAVIAogBARIRCgRob3VyGAQgASgFSAOI",
            "AQESEwoGbWludXRlGAUgASgFSASIAQFCBwoFX3llYXJCCAoGX21vbnRoQgYK",
            "BF9kYXlCBwoFX2hvdXJCCQoHX21pbnV0ZSKHAQoLUmlkZU1lc3NhZ2USDwoC",
            "aWQYASABKAlIAIgBARIYCgtkZXN0aW5hdGlvbhgCIAEoCUgBiAEBEigKCWRl",
            "cGFydHVyZRgDIAEoCzIQLkRhdGVUaW1lTWVzc2FnZUgCiAEBQgUKA19pZEIO",
            "CgxfZGVzdGluYXRpb25CDAoKX2RlcGFydHVyZSJtCg1DbGllbnRNZXNzYWdl",
            "Eg8KAmlkGAEgASgJSACIAQESEQoEbmFtZRgCIAEoCUgBiAEBEhgKC3Bob25l",
            "TnVtYmVyGAMgASgJSAKIAQFCBQoDX2lkQgcKBV9uYW1lQg4KDF9waG9uZU51",
            "bWJlciJVChNSZXNlcnZlZFNlYXRNZXNzYWdlEg8KAmlkGAEgASgJSACIAQES",
            "FwoKc2VhdE51bWJlchgCIAEoBUgBiAEBQgUKA19pZEINCgtfc2VhdE51bWJl",
            "ciKrAQoSUmVzZXJ2YXRpb25NZXNzYWdlEg8KAmlkGAEgASgJSACIAQESIwoG",
            "Y2xpZW50GAIgASgLMg4uQ2xpZW50TWVzc2FnZUgBiAEBEh8KBHJpZGUYAyAB",
            "KAsyDC5SaWRlTWVzc2FnZUgCiAEBEiMKBXNlYXRzGAQgAygLMhQuUmVzZXJ2",
            "ZWRTZWF0TWVzc2FnZUIFCgNfaWRCCQoHX2NsaWVudEIHCgVfcmlkZSLEAQoR",
            "Q2xpZW50U2VhdE1lc3NhZ2USIwoGY2xpZW50GAEgASgLMg4uQ2xpZW50TWVz",
            "c2FnZUgAiAEBEi0KC3Jlc2VydmF0aW9uGAIgASgLMhMuUmVzZXJ2YXRpb25N",
            "ZXNzYWdlSAGIAQESLwoMcmVzZXJ2ZWRTZWF0GAMgASgLMhQuUmVzZXJ2ZWRT",
            "ZWF0TWVzc2FnZUgCiAEBQgkKB19jbGllbnRCDgoMX3Jlc2VydmF0aW9uQg8K",
            "DV9yZXNlcnZlZFNlYXQi6QQKDU9ud2FyZFJlcXVlc3QSKAoEdHlwZRgBIAEo",
            "DjIaLk9ud2FyZFJlcXVlc3QuUmVxdWVzdFR5cGUSFQoIdXNlcm5hbWUYAiAB",
            "KAlIAIgBARIVCghwYXNzd29yZBgDIAEoCUgBiAEBEh8KBHVzZXIYBCABKAsy",
            "DC5Vc2VyTWVzc2FnZUgCiAEBEh8KBHJpZGUYBSABKAsyDC5SaWRlTWVzc2Fn",
            "ZUgDiAEBEhgKC2Rlc3RpbmF0aW9uGAYgASgJSASIAQESKAoJZGVwYXJ0dXJl",
            "GAcgASgLMhAuRGF0ZVRpbWVNZXNzYWdlSAWIAQESFwoKY2xpZW50TmFtZRgI",
            "IAEoCUgGiAEBEhgKC3Bob25lTnVtYmVyGAkgASgJSAeIAQESFwoKc2VhdHND",
            "b3VudBgKIAEoBUgIiAEBIrUBCgtSZXF1ZXN0VHlwZRILCgdVbmtub3duEAAS",
            "CQoFTG9naW4QARIKCgZMb2dvdXQQAhINCglGaW5kUmlkZXMQAxIYChRGaW5k",
            "RW1wdHlTZWF0c09uUmlkZRAEEiYKIkZpbmRSaWRlc0J5RGVzdGluYXRpb25B",
            "bmREZXBhcnR1cmUQBRIaChZGaW5kUmVzZXJ2YXRpb25zQnlSaWRlEAYSFQoR",
            "Q3JlYXRlUmVzZXJ2YXRpb24QB0ILCglfdXNlcm5hbWVCCwoJX3Bhc3N3b3Jk",
            "QgcKBV91c2VyQgcKBV9yaWRlQg4KDF9kZXN0aW5hdGlvbkIMCgpfZGVwYXJ0",
            "dXJlQg0KC19jbGllbnROYW1lQg4KDF9waG9uZU51bWJlckINCgtfc2VhdHND",
            "b3VudCLqAwoOT253YXJkUmVzcG9uc2USKgoEdHlwZRgBIAEoDjIcLk9ud2Fy",
            "ZFJlc3BvbnNlLlJlc3BvbnNlVHlwZRIfCgR1c2VyGAIgASgLMgwuVXNlck1l",
            "c3NhZ2VIAIgBARISCgVlcnJvchgDIAEoCUgBiAEBEhsKBXJpZGVzGAQgAygL",
            "MgwuUmlkZU1lc3NhZ2USFwoKZW1wdHlTZWF0cxgFIAEoBUgCiAEBEicKC2Ns",
            "aWVudFNlYXRzGAYgAygLMhIuQ2xpZW50U2VhdE1lc3NhZ2USLQoLcmVzZXJ2",
            "YXRpb24YByABKAsyEy5SZXNlcnZhdGlvbk1lc3NhZ2VIA4gBASK2AQoMUmVz",
            "cG9uc2VUeXBlEgsKB1Vua25vd24QABIJCgVMb2dpbhABEgkKBUVtcHR5EAIS",
            "DQoJRmluZFJpZGVzEAMSGAoURmluZEVtcHR5U2VhdHNPblJpZGUQBBImCiJG",
            "aW5kUmlkZXNCeURlc3RpbmF0aW9uQW5kRGVwYXJ0dXJlEAUSGgoWRmluZFJl",
            "c2VydmF0aW9uc0J5UmlkZRAGEhYKElJlc2VydmF0aW9uQ3JlYXRlZBAHQgcK",
            "BV91c2VyQggKBl9lcnJvckINCgtfZW1wdHlTZWF0c0IOCgxfcmVzZXJ2YXRp",
            "b24yjgMKDU9ud2FyZFNlcnZpY2USKgoFbG9naW4SDi5PbndhcmRSZXF1ZXN0",
            "Gg8uT253YXJkUmVzcG9uc2UiABIqCgZsb2dvdXQSDi5PbndhcmRSZXF1ZXN0",
            "Gg4uT253YXJkUmVxdWVzdCIAEjAKDGZpbmRBbGxSaWRlcxIOLk9ud2FyZFJl",
            "cXVlc3QaDi5PbndhcmRSZXF1ZXN0IgASOAoUZmluZEVtcHR5U2VhdHNPblJp",
            "ZGUSDi5PbndhcmRSZXF1ZXN0Gg4uT253YXJkUmVxdWVzdCIAEkYKImZpbmRS",
            "aWRlc0J5RGVzdGluYXRpb25BbmREZXBhcnR1cmUSDi5PbndhcmRSZXF1ZXN0",
            "Gg4uT253YXJkUmVxdWVzdCIAEjoKFmZpbmRSZXNlcnZhdGlvbnNCeVJpZGUS",
            "Di5PbndhcmRSZXF1ZXN0Gg4uT253YXJkUmVxdWVzdCIAEjUKEWNyZWF0ZVJl",
            "c2VydmF0aW9uEg4uT253YXJkUmVxdWVzdBoOLk9ud2FyZFJlcXVlc3QiAEIp",
            "ChFjbGllbnQucHJvdG9idWZmc6oCE09ud2FyZFRyYXZlbC5TZXJ2ZXJiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OnwardTravel.Server.UserMessage), global::OnwardTravel.Server.UserMessage.Parser, new[]{ "Id", "Username", "Password" }, new[]{ "Id", "Username", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OnwardTravel.Server.DateTimeMessage), global::OnwardTravel.Server.DateTimeMessage.Parser, new[]{ "Year", "Month", "Day", "Hour", "Minute" }, new[]{ "Year", "Month", "Day", "Hour", "Minute" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OnwardTravel.Server.RideMessage), global::OnwardTravel.Server.RideMessage.Parser, new[]{ "Id", "Destination", "Departure" }, new[]{ "Id", "Destination", "Departure" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OnwardTravel.Server.ClientMessage), global::OnwardTravel.Server.ClientMessage.Parser, new[]{ "Id", "Name", "PhoneNumber" }, new[]{ "Id", "Name", "PhoneNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OnwardTravel.Server.ReservedSeatMessage), global::OnwardTravel.Server.ReservedSeatMessage.Parser, new[]{ "Id", "SeatNumber" }, new[]{ "Id", "SeatNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OnwardTravel.Server.ReservationMessage), global::OnwardTravel.Server.ReservationMessage.Parser, new[]{ "Id", "Client", "Ride", "Seats" }, new[]{ "Id", "Client", "Ride" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OnwardTravel.Server.ClientSeatMessage), global::OnwardTravel.Server.ClientSeatMessage.Parser, new[]{ "Client", "Reservation", "ReservedSeat" }, new[]{ "Client", "Reservation", "ReservedSeat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OnwardTravel.Server.OnwardRequest), global::OnwardTravel.Server.OnwardRequest.Parser, new[]{ "Type", "Username", "Password", "User", "Ride", "Destination", "Departure", "ClientName", "PhoneNumber", "SeatsCount" }, new[]{ "Username", "Password", "User", "Ride", "Destination", "Departure", "ClientName", "PhoneNumber", "SeatsCount" }, new[]{ typeof(global::OnwardTravel.Server.OnwardRequest.Types.RequestType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OnwardTravel.Server.OnwardResponse), global::OnwardTravel.Server.OnwardResponse.Parser, new[]{ "Type", "User", "Error", "Rides", "EmptySeats", "ClientSeats", "Reservation" }, new[]{ "User", "Error", "EmptySeats", "Reservation" }, new[]{ typeof(global::OnwardTravel.Server.OnwardResponse.Types.ResponseType) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UserMessage : pb::IMessage<UserMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserMessage> _parser = new pb::MessageParser<UserMessage>(() => new UserMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OnwardTravel.Server.OnwardTravelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserMessage(UserMessage other) : this() {
      id_ = other.id_;
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserMessage Clone() {
      return new UserMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_ ?? ""; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_ ?? ""; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_ ?? ""; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPassword() {
      password_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasUsername) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasUsername) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DateTimeMessage : pb::IMessage<DateTimeMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DateTimeMessage> _parser = new pb::MessageParser<DateTimeMessage>(() => new DateTimeMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DateTimeMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OnwardTravel.Server.OnwardTravelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DateTimeMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DateTimeMessage(DateTimeMessage other) : this() {
      _hasBits0 = other._hasBits0;
      year_ = other.year_;
      month_ = other.month_;
      day_ = other.day_;
      hour_ = other.hour_;
      minute_ = other.minute_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DateTimeMessage Clone() {
      return new DateTimeMessage(this);
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 1;
    private int year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Year {
      get { if ((_hasBits0 & 1) != 0) { return year_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYear {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYear() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "month" field.</summary>
    public const int MonthFieldNumber = 2;
    private int month_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Month {
      get { if ((_hasBits0 & 2) != 0) { return month_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        month_ = value;
      }
    }
    /// <summary>Gets whether the "month" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMonth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "month" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMonth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "day" field.</summary>
    public const int DayFieldNumber = 3;
    private int day_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Day {
      get { if ((_hasBits0 & 4) != 0) { return day_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        day_ = value;
      }
    }
    /// <summary>Gets whether the "day" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDay {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "day" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDay() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "hour" field.</summary>
    public const int HourFieldNumber = 4;
    private int hour_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Hour {
      get { if ((_hasBits0 & 8) != 0) { return hour_; } else { return 0; } }
      set {
        _hasBits0 |= 8;
        hour_ = value;
      }
    }
    /// <summary>Gets whether the "hour" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHour {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "hour" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHour() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "minute" field.</summary>
    public const int MinuteFieldNumber = 5;
    private int minute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Minute {
      get { if ((_hasBits0 & 16) != 0) { return minute_; } else { return 0; } }
      set {
        _hasBits0 |= 16;
        minute_ = value;
      }
    }
    /// <summary>Gets whether the "minute" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinute {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "minute" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinute() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DateTimeMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DateTimeMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Year != other.Year) return false;
      if (Month != other.Month) return false;
      if (Day != other.Day) return false;
      if (Hour != other.Hour) return false;
      if (Minute != other.Minute) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasYear) hash ^= Year.GetHashCode();
      if (HasMonth) hash ^= Month.GetHashCode();
      if (HasDay) hash ^= Day.GetHashCode();
      if (HasHour) hash ^= Hour.GetHashCode();
      if (HasMinute) hash ^= Minute.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasYear) {
        output.WriteRawTag(8);
        output.WriteInt32(Year);
      }
      if (HasMonth) {
        output.WriteRawTag(16);
        output.WriteInt32(Month);
      }
      if (HasDay) {
        output.WriteRawTag(24);
        output.WriteInt32(Day);
      }
      if (HasHour) {
        output.WriteRawTag(32);
        output.WriteInt32(Hour);
      }
      if (HasMinute) {
        output.WriteRawTag(40);
        output.WriteInt32(Minute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasYear) {
        output.WriteRawTag(8);
        output.WriteInt32(Year);
      }
      if (HasMonth) {
        output.WriteRawTag(16);
        output.WriteInt32(Month);
      }
      if (HasDay) {
        output.WriteRawTag(24);
        output.WriteInt32(Day);
      }
      if (HasHour) {
        output.WriteRawTag(32);
        output.WriteInt32(Hour);
      }
      if (HasMinute) {
        output.WriteRawTag(40);
        output.WriteInt32(Minute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Year);
      }
      if (HasMonth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Month);
      }
      if (HasDay) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Day);
      }
      if (HasHour) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hour);
      }
      if (HasMinute) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minute);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DateTimeMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasYear) {
        Year = other.Year;
      }
      if (other.HasMonth) {
        Month = other.Month;
      }
      if (other.HasDay) {
        Day = other.Day;
      }
      if (other.HasHour) {
        Hour = other.Hour;
      }
      if (other.HasMinute) {
        Minute = other.Minute;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Year = input.ReadInt32();
            break;
          }
          case 16: {
            Month = input.ReadInt32();
            break;
          }
          case 24: {
            Day = input.ReadInt32();
            break;
          }
          case 32: {
            Hour = input.ReadInt32();
            break;
          }
          case 40: {
            Minute = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Year = input.ReadInt32();
            break;
          }
          case 16: {
            Month = input.ReadInt32();
            break;
          }
          case 24: {
            Day = input.ReadInt32();
            break;
          }
          case 32: {
            Hour = input.ReadInt32();
            break;
          }
          case 40: {
            Minute = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RideMessage : pb::IMessage<RideMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RideMessage> _parser = new pb::MessageParser<RideMessage>(() => new RideMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RideMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OnwardTravel.Server.OnwardTravelReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RideMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RideMessage(RideMessage other) : this() {
      id_ = other.id_;
      destination_ = other.destination_;
      departure_ = other.departure_ != null ? other.departure_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RideMessage Clone() {
      return new RideMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_ ?? ""; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "destination" field.</summary>
    public const int DestinationFieldNumber = 2;
    private string destination_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Destination {
      get { return destination_ ?? ""; }
      set {
        destination_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "destination" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDestination {
      get { return destination_ != null; }
    }
    /// <summary>Clears the value of the "destination" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDestination() {
      destination_ = null;
    }

    /// <summary>Field number for the "departure" field.</summary>
    public const int DepartureFieldNumber = 3;
    private global::OnwardTravel.Server.DateTimeMessage departure_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OnwardTravel.Server.DateTimeMessage Departure {
      get { return departure_; }
      set {
        departure_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RideMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RideMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Destination != other.Destination) return false;
      if (!object.Equals(Departure, other.Departure)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasDestination) hash ^= Destination.GetHashCode();
      if (departure_ != null) hash ^= Departure.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasDestination) {
        output.WriteRawTag(18);
        output.WriteString(Destination);
      }
      if (departure_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Departure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasDestination) {
        output.WriteRawTag(18);
        output.WriteString(Destination);
      }
      if (departure_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Departure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasDestination) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Destination);
      }
      if (departure_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Departure);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RideMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasDestination) {
        Destination = other.Destination;
      }
      if (other.departure_ != null) {
        if (departure_ == null) {
          Departure = new global::OnwardTravel.Server.DateTimeMessage();
        }
        Departure.MergeFrom(other.Departure);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Destination = input.ReadString();
            break;
          }
          case 26: {
            if (departure_ == null) {
              Departure = new global::OnwardTravel.Server.DateTimeMessage();
            }
            input.ReadMessage(Departure);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Destination = input.ReadString();
            break;
          }
          case 26: {
            if (departure_ == null) {
              Departure = new global::OnwardTravel.Server.DateTimeMessage();
            }
            input.ReadMessage(Departure);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClientMessage : pb::IMessage<ClientMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientMessage> _parser = new pb::MessageParser<ClientMessage>(() => new ClientMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClientMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OnwardTravel.Server.OnwardTravelReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientMessage(ClientMessage other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      phoneNumber_ = other.phoneNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientMessage Clone() {
      return new ClientMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_ ?? ""; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "phoneNumber" field.</summary>
    public const int PhoneNumberFieldNumber = 3;
    private string phoneNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PhoneNumber {
      get { return phoneNumber_ ?? ""; }
      set {
        phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "phoneNumber" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPhoneNumber {
      get { return phoneNumber_ != null; }
    }
    /// <summary>Clears the value of the "phoneNumber" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPhoneNumber() {
      phoneNumber_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClientMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClientMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (PhoneNumber != other.PhoneNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasPhoneNumber) hash ^= PhoneNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasPhoneNumber) {
        output.WriteRawTag(26);
        output.WriteString(PhoneNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasPhoneNumber) {
        output.WriteRawTag(26);
        output.WriteString(PhoneNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasPhoneNumber) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClientMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasPhoneNumber) {
        PhoneNumber = other.PhoneNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            PhoneNumber = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            PhoneNumber = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReservedSeatMessage : pb::IMessage<ReservedSeatMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReservedSeatMessage> _parser = new pb::MessageParser<ReservedSeatMessage>(() => new ReservedSeatMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReservedSeatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OnwardTravel.Server.OnwardTravelReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReservedSeatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReservedSeatMessage(ReservedSeatMessage other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      seatNumber_ = other.seatNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReservedSeatMessage Clone() {
      return new ReservedSeatMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_ ?? ""; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "seatNumber" field.</summary>
    public const int SeatNumberFieldNumber = 2;
    private int seatNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNumber {
      get { if ((_hasBits0 & 1) != 0) { return seatNumber_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        seatNumber_ = value;
      }
    }
    /// <summary>Gets whether the "seatNumber" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatNumber {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatNumber" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatNumber() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReservedSeatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReservedSeatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SeatNumber != other.SeatNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasSeatNumber) hash ^= SeatNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasSeatNumber) {
        output.WriteRawTag(16);
        output.WriteInt32(SeatNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasSeatNumber) {
        output.WriteRawTag(16);
        output.WriteInt32(SeatNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasSeatNumber) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReservedSeatMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasSeatNumber) {
        SeatNumber = other.SeatNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            SeatNumber = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            SeatNumber = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReservationMessage : pb::IMessage<ReservationMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReservationMessage> _parser = new pb::MessageParser<ReservationMessage>(() => new ReservationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReservationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OnwardTravel.Server.OnwardTravelReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReservationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReservationMessage(ReservationMessage other) : this() {
      id_ = other.id_;
      client_ = other.client_ != null ? other.client_.Clone() : null;
      ride_ = other.ride_ != null ? other.ride_.Clone() : null;
      seats_ = other.seats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReservationMessage Clone() {
      return new ReservationMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_ ?? ""; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 2;
    private global::OnwardTravel.Server.ClientMessage client_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OnwardTravel.Server.ClientMessage Client {
      get { return client_; }
      set {
        client_ = value;
      }
    }

    /// <summary>Field number for the "ride" field.</summary>
    public const int RideFieldNumber = 3;
    private global::OnwardTravel.Server.RideMessage ride_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OnwardTravel.Server.RideMessage Ride {
      get { return ride_; }
      set {
        ride_ = value;
      }
    }

    /// <summary>Field number for the "seats" field.</summary>
    public const int SeatsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OnwardTravel.Server.ReservedSeatMessage> _repeated_seats_codec
        = pb::FieldCodec.ForMessage(34, global::OnwardTravel.Server.ReservedSeatMessage.Parser);
    private readonly pbc::RepeatedField<global::OnwardTravel.Server.ReservedSeatMessage> seats_ = new pbc::RepeatedField<global::OnwardTravel.Server.ReservedSeatMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OnwardTravel.Server.ReservedSeatMessage> Seats {
      get { return seats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReservationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReservationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Client, other.Client)) return false;
      if (!object.Equals(Ride, other.Ride)) return false;
      if(!seats_.Equals(other.seats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (client_ != null) hash ^= Client.GetHashCode();
      if (ride_ != null) hash ^= Ride.GetHashCode();
      hash ^= seats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (client_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Client);
      }
      if (ride_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Ride);
      }
      seats_.WriteTo(output, _repeated_seats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (client_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Client);
      }
      if (ride_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Ride);
      }
      seats_.WriteTo(ref output, _repeated_seats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (client_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Client);
      }
      if (ride_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ride);
      }
      size += seats_.CalculateSize(_repeated_seats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReservationMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.client_ != null) {
        if (client_ == null) {
          Client = new global::OnwardTravel.Server.ClientMessage();
        }
        Client.MergeFrom(other.Client);
      }
      if (other.ride_ != null) {
        if (ride_ == null) {
          Ride = new global::OnwardTravel.Server.RideMessage();
        }
        Ride.MergeFrom(other.Ride);
      }
      seats_.Add(other.seats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (client_ == null) {
              Client = new global::OnwardTravel.Server.ClientMessage();
            }
            input.ReadMessage(Client);
            break;
          }
          case 26: {
            if (ride_ == null) {
              Ride = new global::OnwardTravel.Server.RideMessage();
            }
            input.ReadMessage(Ride);
            break;
          }
          case 34: {
            seats_.AddEntriesFrom(input, _repeated_seats_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (client_ == null) {
              Client = new global::OnwardTravel.Server.ClientMessage();
            }
            input.ReadMessage(Client);
            break;
          }
          case 26: {
            if (ride_ == null) {
              Ride = new global::OnwardTravel.Server.RideMessage();
            }
            input.ReadMessage(Ride);
            break;
          }
          case 34: {
            seats_.AddEntriesFrom(ref input, _repeated_seats_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClientSeatMessage : pb::IMessage<ClientSeatMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientSeatMessage> _parser = new pb::MessageParser<ClientSeatMessage>(() => new ClientSeatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClientSeatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OnwardTravel.Server.OnwardTravelReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientSeatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientSeatMessage(ClientSeatMessage other) : this() {
      client_ = other.client_ != null ? other.client_.Clone() : null;
      reservation_ = other.reservation_ != null ? other.reservation_.Clone() : null;
      reservedSeat_ = other.reservedSeat_ != null ? other.reservedSeat_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientSeatMessage Clone() {
      return new ClientSeatMessage(this);
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 1;
    private global::OnwardTravel.Server.ClientMessage client_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OnwardTravel.Server.ClientMessage Client {
      get { return client_; }
      set {
        client_ = value;
      }
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 2;
    private global::OnwardTravel.Server.ReservationMessage reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OnwardTravel.Server.ReservationMessage Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "reservedSeat" field.</summary>
    public const int ReservedSeatFieldNumber = 3;
    private global::OnwardTravel.Server.ReservedSeatMessage reservedSeat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OnwardTravel.Server.ReservedSeatMessage ReservedSeat {
      get { return reservedSeat_; }
      set {
        reservedSeat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClientSeatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClientSeatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Client, other.Client)) return false;
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(ReservedSeat, other.ReservedSeat)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (client_ != null) hash ^= Client.GetHashCode();
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (reservedSeat_ != null) hash ^= ReservedSeat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (client_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Client);
      }
      if (reservation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Reservation);
      }
      if (reservedSeat_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReservedSeat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (client_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Client);
      }
      if (reservation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Reservation);
      }
      if (reservedSeat_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReservedSeat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (client_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Client);
      }
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (reservedSeat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReservedSeat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClientSeatMessage other) {
      if (other == null) {
        return;
      }
      if (other.client_ != null) {
        if (client_ == null) {
          Client = new global::OnwardTravel.Server.ClientMessage();
        }
        Client.MergeFrom(other.Client);
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          Reservation = new global::OnwardTravel.Server.ReservationMessage();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.reservedSeat_ != null) {
        if (reservedSeat_ == null) {
          ReservedSeat = new global::OnwardTravel.Server.ReservedSeatMessage();
        }
        ReservedSeat.MergeFrom(other.ReservedSeat);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (client_ == null) {
              Client = new global::OnwardTravel.Server.ClientMessage();
            }
            input.ReadMessage(Client);
            break;
          }
          case 18: {
            if (reservation_ == null) {
              Reservation = new global::OnwardTravel.Server.ReservationMessage();
            }
            input.ReadMessage(Reservation);
            break;
          }
          case 26: {
            if (reservedSeat_ == null) {
              ReservedSeat = new global::OnwardTravel.Server.ReservedSeatMessage();
            }
            input.ReadMessage(ReservedSeat);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (client_ == null) {
              Client = new global::OnwardTravel.Server.ClientMessage();
            }
            input.ReadMessage(Client);
            break;
          }
          case 18: {
            if (reservation_ == null) {
              Reservation = new global::OnwardTravel.Server.ReservationMessage();
            }
            input.ReadMessage(Reservation);
            break;
          }
          case 26: {
            if (reservedSeat_ == null) {
              ReservedSeat = new global::OnwardTravel.Server.ReservedSeatMessage();
            }
            input.ReadMessage(ReservedSeat);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OnwardRequest : pb::IMessage<OnwardRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnwardRequest> _parser = new pb::MessageParser<OnwardRequest>(() => new OnwardRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OnwardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OnwardTravel.Server.OnwardTravelReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OnwardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OnwardRequest(OnwardRequest other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      username_ = other.username_;
      password_ = other.password_;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      ride_ = other.ride_ != null ? other.ride_.Clone() : null;
      destination_ = other.destination_;
      departure_ = other.departure_ != null ? other.departure_.Clone() : null;
      clientName_ = other.clientName_;
      phoneNumber_ = other.phoneNumber_;
      seatsCount_ = other.seatsCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OnwardRequest Clone() {
      return new OnwardRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::OnwardTravel.Server.OnwardRequest.Types.RequestType type_ = global::OnwardTravel.Server.OnwardRequest.Types.RequestType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OnwardTravel.Server.OnwardRequest.Types.RequestType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_;
    /// <summary>
    /// login attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_ ?? ""; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_ ?? ""; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPassword() {
      password_ = null;
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 4;
    private global::OnwardTravel.Server.UserMessage user_;
    /// <summary>
    /// logout attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OnwardTravel.Server.UserMessage User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "ride" field.</summary>
    public const int RideFieldNumber = 5;
    private global::OnwardTravel.Server.RideMessage ride_;
    /// <summary>
    /// find empty seats on ride attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OnwardTravel.Server.RideMessage Ride {
      get { return ride_; }
      set {
        ride_ = value;
      }
    }

    /// <summary>Field number for the "destination" field.</summary>
    public const int DestinationFieldNumber = 6;
    private string destination_;
    /// <summary>
    /// find rides by destination and departure attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Destination {
      get { return destination_ ?? ""; }
      set {
        destination_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "destination" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDestination {
      get { return destination_ != null; }
    }
    /// <summary>Clears the value of the "destination" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDestination() {
      destination_ = null;
    }

    /// <summary>Field number for the "departure" field.</summary>
    public const int DepartureFieldNumber = 7;
    private global::OnwardTravel.Server.DateTimeMessage departure_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OnwardTravel.Server.DateTimeMessage Departure {
      get { return departure_; }
      set {
        departure_ = value;
      }
    }

    /// <summary>Field number for the "clientName" field.</summary>
    public const int ClientNameFieldNumber = 8;
    private string clientName_;
    /// <summary>
    /// create reservation attributes
    /// optional RideMessage ride = 5;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientName {
      get { return clientName_ ?? ""; }
      set {
        clientName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clientName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientName {
      get { return clientName_ != null; }
    }
    /// <summary>Clears the value of the "clientName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientName() {
      clientName_ = null;
    }

    /// <summary>Field number for the "phoneNumber" field.</summary>
    public const int PhoneNumberFieldNumber = 9;
    private string phoneNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PhoneNumber {
      get { return phoneNumber_ ?? ""; }
      set {
        phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "phoneNumber" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPhoneNumber {
      get { return phoneNumber_ != null; }
    }
    /// <summary>Clears the value of the "phoneNumber" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPhoneNumber() {
      phoneNumber_ = null;
    }

    /// <summary>Field number for the "seatsCount" field.</summary>
    public const int SeatsCountFieldNumber = 10;
    private int seatsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatsCount {
      get { if ((_hasBits0 & 1) != 0) { return seatsCount_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        seatsCount_ = value;
      }
    }
    /// <summary>Gets whether the "seatsCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatsCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatsCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatsCount() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OnwardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OnwardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      if (!object.Equals(User, other.User)) return false;
      if (!object.Equals(Ride, other.Ride)) return false;
      if (Destination != other.Destination) return false;
      if (!object.Equals(Departure, other.Departure)) return false;
      if (ClientName != other.ClientName) return false;
      if (PhoneNumber != other.PhoneNumber) return false;
      if (SeatsCount != other.SeatsCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::OnwardTravel.Server.OnwardRequest.Types.RequestType.Unknown) hash ^= Type.GetHashCode();
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (ride_ != null) hash ^= Ride.GetHashCode();
      if (HasDestination) hash ^= Destination.GetHashCode();
      if (departure_ != null) hash ^= Departure.GetHashCode();
      if (HasClientName) hash ^= ClientName.GetHashCode();
      if (HasPhoneNumber) hash ^= PhoneNumber.GetHashCode();
      if (HasSeatsCount) hash ^= SeatsCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::OnwardTravel.Server.OnwardRequest.Types.RequestType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasUsername) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (user_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(User);
      }
      if (ride_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Ride);
      }
      if (HasDestination) {
        output.WriteRawTag(50);
        output.WriteString(Destination);
      }
      if (departure_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Departure);
      }
      if (HasClientName) {
        output.WriteRawTag(66);
        output.WriteString(ClientName);
      }
      if (HasPhoneNumber) {
        output.WriteRawTag(74);
        output.WriteString(PhoneNumber);
      }
      if (HasSeatsCount) {
        output.WriteRawTag(80);
        output.WriteInt32(SeatsCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::OnwardTravel.Server.OnwardRequest.Types.RequestType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasUsername) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (user_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(User);
      }
      if (ride_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Ride);
      }
      if (HasDestination) {
        output.WriteRawTag(50);
        output.WriteString(Destination);
      }
      if (departure_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Departure);
      }
      if (HasClientName) {
        output.WriteRawTag(66);
        output.WriteString(ClientName);
      }
      if (HasPhoneNumber) {
        output.WriteRawTag(74);
        output.WriteString(PhoneNumber);
      }
      if (HasSeatsCount) {
        output.WriteRawTag(80);
        output.WriteInt32(SeatsCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::OnwardTravel.Server.OnwardRequest.Types.RequestType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (ride_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ride);
      }
      if (HasDestination) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Destination);
      }
      if (departure_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Departure);
      }
      if (HasClientName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientName);
      }
      if (HasPhoneNumber) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
      }
      if (HasSeatsCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatsCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OnwardRequest other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::OnwardTravel.Server.OnwardRequest.Types.RequestType.Unknown) {
        Type = other.Type;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::OnwardTravel.Server.UserMessage();
        }
        User.MergeFrom(other.User);
      }
      if (other.ride_ != null) {
        if (ride_ == null) {
          Ride = new global::OnwardTravel.Server.RideMessage();
        }
        Ride.MergeFrom(other.Ride);
      }
      if (other.HasDestination) {
        Destination = other.Destination;
      }
      if (other.departure_ != null) {
        if (departure_ == null) {
          Departure = new global::OnwardTravel.Server.DateTimeMessage();
        }
        Departure.MergeFrom(other.Departure);
      }
      if (other.HasClientName) {
        ClientName = other.ClientName;
      }
      if (other.HasPhoneNumber) {
        PhoneNumber = other.PhoneNumber;
      }
      if (other.HasSeatsCount) {
        SeatsCount = other.SeatsCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::OnwardTravel.Server.OnwardRequest.Types.RequestType) input.ReadEnum();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            if (user_ == null) {
              User = new global::OnwardTravel.Server.UserMessage();
            }
            input.ReadMessage(User);
            break;
          }
          case 42: {
            if (ride_ == null) {
              Ride = new global::OnwardTravel.Server.RideMessage();
            }
            input.ReadMessage(Ride);
            break;
          }
          case 50: {
            Destination = input.ReadString();
            break;
          }
          case 58: {
            if (departure_ == null) {
              Departure = new global::OnwardTravel.Server.DateTimeMessage();
            }
            input.ReadMessage(Departure);
            break;
          }
          case 66: {
            ClientName = input.ReadString();
            break;
          }
          case 74: {
            PhoneNumber = input.ReadString();
            break;
          }
          case 80: {
            SeatsCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::OnwardTravel.Server.OnwardRequest.Types.RequestType) input.ReadEnum();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            if (user_ == null) {
              User = new global::OnwardTravel.Server.UserMessage();
            }
            input.ReadMessage(User);
            break;
          }
          case 42: {
            if (ride_ == null) {
              Ride = new global::OnwardTravel.Server.RideMessage();
            }
            input.ReadMessage(Ride);
            break;
          }
          case 50: {
            Destination = input.ReadString();
            break;
          }
          case 58: {
            if (departure_ == null) {
              Departure = new global::OnwardTravel.Server.DateTimeMessage();
            }
            input.ReadMessage(Departure);
            break;
          }
          case 66: {
            ClientName = input.ReadString();
            break;
          }
          case 74: {
            PhoneNumber = input.ReadString();
            break;
          }
          case 80: {
            SeatsCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OnwardRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum RequestType {
        [pbr::OriginalName("Unknown")] Unknown = 0,
        [pbr::OriginalName("Login")] Login = 1,
        [pbr::OriginalName("Logout")] Logout = 2,
        [pbr::OriginalName("FindRides")] FindRides = 3,
        [pbr::OriginalName("FindEmptySeatsOnRide")] FindEmptySeatsOnRide = 4,
        [pbr::OriginalName("FindRidesByDestinationAndDeparture")] FindRidesByDestinationAndDeparture = 5,
        [pbr::OriginalName("FindReservationsByRide")] FindReservationsByRide = 6,
        [pbr::OriginalName("CreateReservation")] CreateReservation = 7,
      }

    }
    #endregion

  }

  public sealed partial class OnwardResponse : pb::IMessage<OnwardResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnwardResponse> _parser = new pb::MessageParser<OnwardResponse>(() => new OnwardResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OnwardResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OnwardTravel.Server.OnwardTravelReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OnwardResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OnwardResponse(OnwardResponse other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      error_ = other.error_;
      rides_ = other.rides_.Clone();
      emptySeats_ = other.emptySeats_;
      clientSeats_ = other.clientSeats_.Clone();
      reservation_ = other.reservation_ != null ? other.reservation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OnwardResponse Clone() {
      return new OnwardResponse(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::OnwardTravel.Server.OnwardResponse.Types.ResponseType type_ = global::OnwardTravel.Server.OnwardResponse.Types.ResponseType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OnwardTravel.Server.OnwardResponse.Types.ResponseType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private global::OnwardTravel.Server.UserMessage user_;
    /// <summary>
    /// login response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OnwardTravel.Server.UserMessage User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 3;
    private string error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Error {
      get { return error_ ?? ""; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "error" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasError {
      get { return error_ != null; }
    }
    /// <summary>Clears the value of the "error" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearError() {
      error_ = null;
    }

    /// <summary>Field number for the "rides" field.</summary>
    public const int RidesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OnwardTravel.Server.RideMessage> _repeated_rides_codec
        = pb::FieldCodec.ForMessage(34, global::OnwardTravel.Server.RideMessage.Parser);
    private readonly pbc::RepeatedField<global::OnwardTravel.Server.RideMessage> rides_ = new pbc::RepeatedField<global::OnwardTravel.Server.RideMessage>();
    /// <summary>
    /// find rides response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OnwardTravel.Server.RideMessage> Rides {
      get { return rides_; }
    }

    /// <summary>Field number for the "emptySeats" field.</summary>
    public const int EmptySeatsFieldNumber = 5;
    private int emptySeats_;
    /// <summary>
    /// find empty seats on ride response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EmptySeats {
      get { if ((_hasBits0 & 1) != 0) { return emptySeats_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        emptySeats_ = value;
      }
    }
    /// <summary>Gets whether the "emptySeats" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEmptySeats {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "emptySeats" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEmptySeats() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clientSeats" field.</summary>
    public const int ClientSeatsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::OnwardTravel.Server.ClientSeatMessage> _repeated_clientSeats_codec
        = pb::FieldCodec.ForMessage(50, global::OnwardTravel.Server.ClientSeatMessage.Parser);
    private readonly pbc::RepeatedField<global::OnwardTravel.Server.ClientSeatMessage> clientSeats_ = new pbc::RepeatedField<global::OnwardTravel.Server.ClientSeatMessage>();
    /// <summary>
    /// find reservations by ride response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OnwardTravel.Server.ClientSeatMessage> ClientSeats {
      get { return clientSeats_; }
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 7;
    private global::OnwardTravel.Server.ReservationMessage reservation_;
    /// <summary>
    /// reservation created response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OnwardTravel.Server.ReservationMessage Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OnwardResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OnwardResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(User, other.User)) return false;
      if (Error != other.Error) return false;
      if(!rides_.Equals(other.rides_)) return false;
      if (EmptySeats != other.EmptySeats) return false;
      if(!clientSeats_.Equals(other.clientSeats_)) return false;
      if (!object.Equals(Reservation, other.Reservation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::OnwardTravel.Server.OnwardResponse.Types.ResponseType.Unknown) hash ^= Type.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (HasError) hash ^= Error.GetHashCode();
      hash ^= rides_.GetHashCode();
      if (HasEmptySeats) hash ^= EmptySeats.GetHashCode();
      hash ^= clientSeats_.GetHashCode();
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::OnwardTravel.Server.OnwardResponse.Types.ResponseType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (HasError) {
        output.WriteRawTag(26);
        output.WriteString(Error);
      }
      rides_.WriteTo(output, _repeated_rides_codec);
      if (HasEmptySeats) {
        output.WriteRawTag(40);
        output.WriteInt32(EmptySeats);
      }
      clientSeats_.WriteTo(output, _repeated_clientSeats_codec);
      if (reservation_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Reservation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::OnwardTravel.Server.OnwardResponse.Types.ResponseType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (HasError) {
        output.WriteRawTag(26);
        output.WriteString(Error);
      }
      rides_.WriteTo(ref output, _repeated_rides_codec);
      if (HasEmptySeats) {
        output.WriteRawTag(40);
        output.WriteInt32(EmptySeats);
      }
      clientSeats_.WriteTo(ref output, _repeated_clientSeats_codec);
      if (reservation_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Reservation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::OnwardTravel.Server.OnwardResponse.Types.ResponseType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (HasError) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      size += rides_.CalculateSize(_repeated_rides_codec);
      if (HasEmptySeats) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EmptySeats);
      }
      size += clientSeats_.CalculateSize(_repeated_clientSeats_codec);
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OnwardResponse other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::OnwardTravel.Server.OnwardResponse.Types.ResponseType.Unknown) {
        Type = other.Type;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::OnwardTravel.Server.UserMessage();
        }
        User.MergeFrom(other.User);
      }
      if (other.HasError) {
        Error = other.Error;
      }
      rides_.Add(other.rides_);
      if (other.HasEmptySeats) {
        EmptySeats = other.EmptySeats;
      }
      clientSeats_.Add(other.clientSeats_);
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          Reservation = new global::OnwardTravel.Server.ReservationMessage();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::OnwardTravel.Server.OnwardResponse.Types.ResponseType) input.ReadEnum();
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::OnwardTravel.Server.UserMessage();
            }
            input.ReadMessage(User);
            break;
          }
          case 26: {
            Error = input.ReadString();
            break;
          }
          case 34: {
            rides_.AddEntriesFrom(input, _repeated_rides_codec);
            break;
          }
          case 40: {
            EmptySeats = input.ReadInt32();
            break;
          }
          case 50: {
            clientSeats_.AddEntriesFrom(input, _repeated_clientSeats_codec);
            break;
          }
          case 58: {
            if (reservation_ == null) {
              Reservation = new global::OnwardTravel.Server.ReservationMessage();
            }
            input.ReadMessage(Reservation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::OnwardTravel.Server.OnwardResponse.Types.ResponseType) input.ReadEnum();
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::OnwardTravel.Server.UserMessage();
            }
            input.ReadMessage(User);
            break;
          }
          case 26: {
            Error = input.ReadString();
            break;
          }
          case 34: {
            rides_.AddEntriesFrom(ref input, _repeated_rides_codec);
            break;
          }
          case 40: {
            EmptySeats = input.ReadInt32();
            break;
          }
          case 50: {
            clientSeats_.AddEntriesFrom(ref input, _repeated_clientSeats_codec);
            break;
          }
          case 58: {
            if (reservation_ == null) {
              Reservation = new global::OnwardTravel.Server.ReservationMessage();
            }
            input.ReadMessage(Reservation);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OnwardResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ResponseType {
        [pbr::OriginalName("Unknown")] Unknown = 0,
        [pbr::OriginalName("Login")] Login = 1,
        [pbr::OriginalName("Empty")] Empty = 2,
        [pbr::OriginalName("FindRides")] FindRides = 3,
        [pbr::OriginalName("FindEmptySeatsOnRide")] FindEmptySeatsOnRide = 4,
        [pbr::OriginalName("FindRidesByDestinationAndDeparture")] FindRidesByDestinationAndDeparture = 5,
        [pbr::OriginalName("FindReservationsByRide")] FindReservationsByRide = 6,
        [pbr::OriginalName("ReservationCreated")] ReservationCreated = 7,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
